{"version":3,"sources":["/home/gd.martinez/Downloads/Bakuq/Projects/good-job/webapp/src/app/presentation/modules/recovery-password/components/index.ts","/home/gd.martinez/Downloads/Bakuq/Projects/good-job/webapp/src/app/presentation/modules/recovery-password/components/recovery-password.component.html","/home/gd.martinez/Downloads/Bakuq/Projects/good-job/webapp/src/app/presentation/modules/recovery-password/components/recovery-password.component.scss","/home/gd.martinez/Downloads/Bakuq/Projects/good-job/webapp/src/app/presentation/modules/recovery-password/components/recovery-password.component.ts","/home/gd.martinez/Downloads/Bakuq/Projects/good-job/webapp/src/app/presentation/modules/recovery-password/recovery-password.module.ts","/home/gd.martinez/Downloads/Bakuq/Projects/good-job/webapp/src/app/presentation/modules/recovery-password/recovery-password.routing.ts"],"names":[],"mappings":"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","file":"recovery-password.module.chunk.js","sourcesContent":["import { RecoveryPasswordComponent } from './recovery-password.component';\n\nexport const components: any[] = [\n  RecoveryPasswordComponent\n];\n\nexport * from './recovery-password.component';\n\n\n\n// WEBPACK FOOTER //\n// /home/gd.martinez/Downloads/Bakuq/Projects/good-job/webapp/src/app/presentation/modules/recovery-password/components/index.ts","module.exports = \"<article class=\\\"Presentation__element mat-elevation-z3\\\">\\n  <app-good-job-loader [show]=\\\"isLoading$ | async\\\" [overlay]=\\\"true\\\"></app-good-job-loader>\\n\\n  <header class=\\\"Presentation__element__header mb-30\\\">\\n    <figure>\\n      <img src=\\\"../../../../../assets/images/logo.svg\\\" alt=\\\"logo\\\">\\n\\n      <figcaption>\\n        Recuperar Contraseña\\n      </figcaption>\\n    </figure>\\n  </header>\\n\\n  <form *ngIf=\\\"!userSelected; else changePasswordForm\\\" class=\\\"grid-top mb-10\\\" novalidate [formGroup]=\\\"emailFormGroup\\\" (ngSubmit)=\\\"onSubmitEmail()\\\">\\n    <div class=\\\"container-element container-element--field col-12\\\">\\n      <mat-form-field>\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\" required>\\n\\n        <mat-error *ngIf=\\\"!emailFormGroup.email\\\">\\n          Debe ingresar su email\\n        </mat-error>\\n      </mat-form-field>\\n    </div>\\n\\n    <div class=\\\"container-element container-element--button col-12 mt-20\\\">\\n      <button class=\\\"button button--block\\\" type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\">Enviar</button>\\n    </div>\\n  </form>\\n\\n  <ng-template #changePasswordForm>\\n    <form class=\\\"grid-top mb-10\\\" novalidate [formGroup]=\\\"recoveryPasswordFormGroup\\\" (ngSubmit)=\\\"onSubmitChangePassword()\\\">\\n      <div class=\\\"container-element container-element--field col-12\\\">\\n        <mat-form-field>\\n          <input matInput type=\\\"password\\\" placeholder=\\\"Nueva contraseña\\\" formControlName=\\\"password\\\" required>\\n\\n          <mat-error *ngIf=\\\"!recoveryPasswordFormGroup.password\\\">\\n            Debe ingresar una nueva contraseña\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n\\n      <div class=\\\"container-element container-element--field col-12\\\">\\n        <mat-form-field>\\n          <input matInput type=\\\"password\\\" placeholder=\\\"Repita contraseña\\\" formControlName=\\\"confirmPassword\\\" required>\\n\\n          <mat-error *ngIf=\\\"recoveryPasswordFormGroup.errors?.doesMatchPassword\\\">\\n            La contraseñas no coinciden\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n\\n      <div class=\\\"container-element container-element--button col-12 mt-20\\\">\\n        <button class=\\\"button button--block\\\" type=\\\"submit\\\" [disabled]=\\\"!recoveryPasswordFormGroup.valid\\\" mat-raised-button color=\\\"primary\\\">Restablecer contraseña</button>\\n      </div>\\n    </form>\\n  </ng-template>\\n</article>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/gd.martinez/Downloads/Bakuq/Projects/good-job/webapp/src/app/presentation/modules/recovery-password/components/recovery-password.component.html\n// module id = ../../../../../src/app/presentation/modules/recovery-password/components/recovery-password.component.html\n// module chunks = recovery-password.module","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"@media all and (max-width: 768px) {\\n  [class*='hidden-'][class*='-xs'] {\\n    display: none !important; } }\\n\\n@media all and (min-width: 768px) and (max-width: 1024px) {\\n  [class*='hidden-'][class*='-md'] {\\n    display: none !important; } }\\n\\n@media all and (min-width: 1024px) {\\n  [class*='hidden-'][class*='-lg'] {\\n    display: none !important; } }\\n\\n.mt-0 {\\n  margin-top: 0; }\\n\\n.mr-0 {\\n  margin-right: 0; }\\n\\n.mb-0 {\\n  margin-bottom: 0; }\\n\\n.ml-0 {\\n  margin-left: 0; }\\n\\n.mt-10 {\\n  margin-top: 10px; }\\n\\n.mr-10 {\\n  margin-right: 10px; }\\n\\n.mb-10 {\\n  margin-bottom: 10px; }\\n\\n.ml-10 {\\n  margin-left: 10px; }\\n\\n.mt-20 {\\n  margin-top: 20px; }\\n\\n.mr-20 {\\n  margin-right: 20px; }\\n\\n.mb-20 {\\n  margin-bottom: 20px; }\\n\\n.ml-20 {\\n  margin-left: 20px; }\\n\\n.mt-30 {\\n  margin-top: 30px; }\\n\\n.mr-30 {\\n  margin-right: 30px; }\\n\\n.mb-30 {\\n  margin-bottom: 30px; }\\n\\n.ml-30 {\\n  margin-left: 30px; }\\n\\n.mt-40 {\\n  margin-top: 40px; }\\n\\n.mr-40 {\\n  margin-right: 40px; }\\n\\n.mb-40 {\\n  margin-bottom: 40px; }\\n\\n.ml-40 {\\n  margin-left: 40px; }\\n\\n.mt-50 {\\n  margin-top: 50px; }\\n\\n.mr-50 {\\n  margin-right: 50px; }\\n\\n.mb-50 {\\n  margin-bottom: 50px; }\\n\\n.ml-50 {\\n  margin-left: 50px; }\\n\\n.mt-60 {\\n  margin-top: 60px; }\\n\\n.mr-60 {\\n  margin-right: 60px; }\\n\\n.mb-60 {\\n  margin-bottom: 60px; }\\n\\n.ml-60 {\\n  margin-left: 60px; }\\n\\n.mt-70 {\\n  margin-top: 70px; }\\n\\n.mr-70 {\\n  margin-right: 70px; }\\n\\n.mb-70 {\\n  margin-bottom: 70px; }\\n\\n.ml-70 {\\n  margin-left: 70px; }\\n\\n.mt-80 {\\n  margin-top: 80px; }\\n\\n.mr-80 {\\n  margin-right: 80px; }\\n\\n.mb-80 {\\n  margin-bottom: 80px; }\\n\\n.ml-80 {\\n  margin-left: 80px; }\\n\\n.mt-90 {\\n  margin-top: 90px; }\\n\\n.mr-90 {\\n  margin-right: 90px; }\\n\\n.mb-90 {\\n  margin-bottom: 90px; }\\n\\n.ml-90 {\\n  margin-left: 90px; }\\n\\n.mt-100 {\\n  margin-top: 100px; }\\n\\n.mr-100 {\\n  margin-right: 100px; }\\n\\n.mb-100 {\\n  margin-bottom: 100px; }\\n\\n.ml-100 {\\n  margin-left: 100px; }\\n\\n.dpBlock {\\n  display: block; }\\n\\n.dpInBlock {\\n  display: inline-block; }\\n\\n.dpNone {\\n  display: none; }\\n\\n.align-right {\\n  text-align: right; }\\n\\n.align-center {\\n  text-align: center; }\\n\\n.align-left {\\n  text-align: left; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/gd.martinez/Downloads/Bakuq/Projects/good-job/webapp/src/app/presentation/modules/recovery-password/components/recovery-password.component.scss\n// module id = ../../../../../src/app/presentation/modules/recovery-password/components/recovery-password.component.scss\n// module chunks = recovery-password.module","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\n\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs/Observable';\n\nimport * as fromServicesShared from '@shared/services';\nimport * as fromServices from '../services';\n\nimport * as fromStoreProfile from '@profile/store';\nimport * as fromStore from '../store';\n\n@Component({\n  selector: 'app-good-job-recovery-password',\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: './recovery-password.component.html',\n  styleUrls: ['./recovery-password.component.scss'],\n  providers: [fromServices.RecoveryPasswordService],\n})\nexport class RecoveryPasswordComponent implements OnInit {\n  isLoading$: Observable<boolean>;\n  loggedIn$: Observable<boolean>;\n\n  public router: Router;\n\n  public userSelected: Boolean = false;\n\n  public emailFormGroup: FormGroup;\n  public recoveryPasswordFormGroup: FormGroup;\n\n  constructor(\n    private _store: Store<fromStore.RecoveryPasswordState>,\n    private _storeProfile: Store<fromStoreProfile.ProfileState>,\n    private _formBuilder: FormBuilder,\n    private _activeRoute: ActivatedRoute\n  ) {\n    this.isLoading$ = this._store.pipe(select(fromStore.getLoading));\n\n    this.emailFormGroup = this._formBuilder.group({\n      email: ['', Validators.required],\n    });\n\n    this.recoveryPasswordFormGroup = this._formBuilder.group({\n      _id: ['', ''],\n      password: ['', Validators.required],\n      confirmPassword: ['', Validators.required]\n    }, {\n      validator: fromServicesShared.ConfirmPassword.validate.bind(this)\n    });\n  }\n\n  ngOnInit() {\n    const routeParams = this._activeRoute.snapshot.queryParams;\n    if (routeParams.user) {\n      this.userSelected = true;\n\n      this.recoveryPasswordFormGroup.patchValue({\n        _id: routeParams.user\n      });\n    }\n  }\n\n  onSubmitEmail() {\n    if (this.emailFormGroup.dirty && this.emailFormGroup.valid) {\n      this._store.dispatch(new fromStore.SendEmail(this.emailFormGroup.value));\n    }\n  }\n\n  onSubmitChangePassword() {\n    if (this.recoveryPasswordFormGroup.dirty && this.recoveryPasswordFormGroup.valid) {\n      this._store.dispatch(new fromStore.UpdatingPassword(this.recoveryPasswordFormGroup.value));\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/gd.martinez/Downloads/Bakuq/Projects/good-job/webapp/src/app/presentation/modules/recovery-password/components/recovery-password.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { SharedModule } from '@shared/shared.module';\nimport { RecoveryPasswordRouting } from './recovery-password.routing';\n\nimport * as fromComponents from './components';\nimport * as fromServices from './services';\n\n@NgModule({\n  declarations: [...fromComponents.components],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RecoveryPasswordRouting,\n    SharedModule,\n  ],\n  providers: [...fromServices.services]\n})\n\nexport class RecoveryPasswordModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/gd.martinez/Downloads/Bakuq/Projects/good-job/webapp/src/app/presentation/modules/recovery-password/recovery-password.module.ts","import { Routes, RouterModule, PreloadAllModules } from '@angular/router';\n\nimport * as fromComponents from './components';\n\nexport const routes = [\n  { path: '', component: fromComponents.RecoveryPasswordComponent, pathMatch: 'full' }\n];\n\nexport const RecoveryPasswordRouting = RouterModule.forChild(routes);\n\n\n\n// WEBPACK FOOTER //\n// /home/gd.martinez/Downloads/Bakuq/Projects/good-job/webapp/src/app/presentation/modules/recovery-password/recovery-password.routing.ts"],"sourceRoot":"webpack:///"}